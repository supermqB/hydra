version: 2.1

orbs:
  goreleaser: ory/goreleaser@0.1.20
  slack: circleci/slack@3.4.2
  sdk: ory/sdk@0.1.38
  changelog: ory/changelog@0.1.4
  nancy: ory/nancy@0.0.13
  docs: ory/docs@0.0.8
  golangci: ory/golangci@0.0.9

jobs:
#  test-legacy-migrations:
#    parameters:
#      flavor:
#        type: string
#    machine:
#      image: ubuntu-1604:201903-01
#    steps:
#      - checkout
#      - run: sudo rm -rfd /usr/local/go
#      - run: sudo circleci-install golang 1.14.2
#      - run: make test-resetdb
#      - run: source scripts/test-env.sh && go test -tags legacy_migration_test -failfast -timeout=20m -run=Test*/db=<< parameters.flavor>> ./internal/fizzmigrate

  test:
    docker:
      - image: circleci/golang:1.14-node
        environment:
          - GO111MODULE=on
          - TEST_DATABASE_POSTGRESQL=postgres://test:test@localhost:5432/postgres?sslmode=disable
          - TEST_DATABASE_MYSQL=mysql://root:test@(localhost:3306)/mysql?multiStatements=true&parseTime=true
          - TEST_DATABASE_COCKROACHDB=cockroach://root@localhost:26257/defaultdb?sslmode=disable
      - image: postgres:9.6
        environment:
          - POSTGRES_USER=test
          - POSTGRES_PASSWORD=test
          - POSTGRES_DB=postgres
      - image: mysql:5.7
        environment:
          - MYSQL_ROOT_PASSWORD=test
      - image: cockroachdb/cockroach:v2.1.6
        command: start --insecure
    working_directory: /go/src/github.com/ory/hydra
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - hydra-v1-{{ checksum "go.sum" }}-{{ checksum "Makefile" }}
      - run: go mod download
      - run: make .bin/go-acc
      - save_cache:
          key: hydra-v1-{{ checksum "go.sum" }}-{{ checksum "Makefile" }}
          paths:
            - "/go/pkg/mod"
            - ".bin"
      - run: .bin/go-acc -o coverage.txt ./... -- -failfast -timeout=20m -tags sqlite
      #      Running race conditions requires parallel tests, otherwise it's worthless (which is the case)
      #      - run: go test -race -short $(go list ./... | grep -v cmd)
      - run: test -z "$CIRCLE_PR_NUMBER" && goveralls -service=circle-ci -coverprofile=coverage.txt -repotoken=$COVERALLS_REPO_TOKEN || echo "forks are not allowed to push to coveralls"
      - run: make docker

  test-e2e:
    parameters:
      flavor:
        type: string
    docker:
      - image: oryd/e2e-env:latest
        environment:
          - GO111MODULE=on
          - TEST_DATABASE_MYSQL=mysql://root:test@(localhost:3306)/mysql?parseTime=true&multiStatements=true
          - TEST_DATABASE_COCKROACHDB=cockroach://root@localhost:26257/defaultdb?sslmode=disable
          - TEST_DATABASE_POSTGRESQL=postgres://test:test@localhost:5432/postgres?sslmode=disable
      - image: postgres:9.6
        environment:
          - POSTGRES_USER=test
          - POSTGRES_PASSWORD=test
          - POSTGRES_DB=postgres
      - image: cockroachdb/cockroach:v2.1.6
        command: start --insecure
      - image: mysql:5.7
        environment:
          - MYSQL_ROOT_PASSWORD=test
    working_directory: /go/src/github.com/ory/hydra
    steps:
      - checkout
      # core node_modules cache
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps
      - run: npm ci
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          # cache NPM modules and the folder with the Cypress binary
          paths:
            - ~/.npm
            - ~/.cache

      # oauth2_client node_modules cache
      - restore_cache:
          keys:
            - v1-deps-oauth2-client-{{ checksum "test/e2e/oauth2-client/package-lock.json" }}
            - v1-deps
      - run: cd test/e2e/oauth2-client; npm ci
      - save_cache:
          key: v1-deps-oauth2-client-{{ checksum "test/e2e/oauth2-client/package-lock.json" }}
          # cache NPM modules and the folder with the Cypress binary
          paths:
            - ~/.npm
            - ~/.cache
            - /test/e2e/oauth2-client/node_modules

      # go modules cache
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go install .
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run: ./test/e2e/circle-ci.bash << parameters.flavor >>
      - run: ./test/e2e/circle-ci.bash << parameters.flavor >>-jwt

  validate:
    docker:
      - image: circleci/golang:1.15-node
        environment:
          GO111MODULE: 'on'
    working_directory: /go/src/github.com/ory/hydra
    steps:
      - checkout
      - golangci/lint
      - docs/check-format
      - run: |
          bash <(curl -s https://raw.githubusercontent.com/ory/ci/master/src/scripts/install/prettier.sh)
          npm run format:check

workflows:
  bdt:
    jobs:

      # Test legacy migrations
#      - test-legacy-migrations:
#          name: test-legacy-migrations-postgres
#          flavor: postgres
#          filters:
#            tags:
#              only: /.*/
#      - test-legacy-migrations:
#          name: test-legacy-migrations-mysql
#          requires:
#            - test-legacy-migrations-postgres
#          flavor: mysql
#          filters:
#            tags:
#              only: /.*/
#      - test-legacy-migrations:
#          name: test-legacy-migrations-cockroach
#          requires:
#            - test-legacy-migrations-postgres
#          flavor: cockroach
#          filters:
#            tags:
#              only: /.*/
      # END - Test legacy migrations

      - validate:
          filters:
            tags:
              only: /.*/
      - nancy/test:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - test-e2e:
          name: test-e2e-memory
          flavor: memory
          filters:
            tags:
              only: /.*/
      - test-e2e:
          name: test-e2e-postgres
          requires:
            - test-e2e-memory
          flavor: postgres
          filters:
            tags:
              only: /.*/
      - test-e2e:
          name: test-e2e-mysql
          requires:
            - test-e2e-memory
          flavor: mysql
          filters:
            tags:
              only: /.*/
      - test-e2e:
          name: test-e2e-cockroach
          requires:
            - test-e2e-memory
          flavor: cockroach
          filters:
            tags:
              only: /.*/
      - changelog/generate:
          requires:
            - nancy/test
            - test
            - validate
            - test-e2e-postgres
            - test-e2e-mysql
            - test-e2e-cockroach
            - docs/build
#            - test-legacy-migrations-mysql
#            - test-legacy-migrations-cockroach
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - sdk/generate:
          appname: Ory_Hydra
          specignorepgks: internal/httpclient -x gopkg.in/square/go-jose.v2
          requires:
            - nancy/test
            - test
            - validate
            - test-e2e-postgres
            - test-e2e-mysql
            - test-e2e-cockroach
#            - test-legacy-migrations-mysql
#            - test-legacy-migrations-cockroach
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /master/
      - sdk/release:
          specignorepgks: internal/httpclient -x gopkg.in/square/go-jose.v2
          requires:
            - nancy/test
            - test
            - validate
            - sdk/generate
            - goreleaser/release
            - docs/build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - docs/cli:
          requires:
            - nancy/test
            - test
            - validate
      - docs/build:
          requires:
            - nancy/test
            - test
            - validate
          filters:
            tags:
              only: /.*/
            branches:
               only: master
      ## goreleaser
      -
        goreleaser/test:
          filters:
            tags:
              only: /.*/
      -
        goreleaser/release:
          requires:
            - goreleaser/test
            - nancy/test
            - test
            - validate
            - test-e2e-postgres
            - test-e2e-mysql
            - test-e2e-cockroach
            - changelog/generate
#            - test-legacy-migrations-mysql
#            - test-legacy-migrations-cockroach
            - docs/build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      -
        goreleaser/render-version-schema:
          requires:
            - goreleaser/release
          filters:
            tags:
              only: /.*/
      -
        goreleaser/newsletter-draft:
          chimp-list: f605a41b53
          chimp-segment: 6479481
          requires:
            - goreleaser/release
          filters:
            tags:
              only: /.*/
      -
        slack/approval-notification:
          message: Pending approval
          channel: release-automation
          requires:
            - goreleaser/newsletter-draft
          filters:
            tags:
              only: /.*/
      -
        newsletter-approval:
          type: approval
          requires:
            - goreleaser/newsletter-draft
          filters:
            tags:
              only: /.*/
      -
        goreleaser/newsletter-send:
          chimp-list: f605a41b53
          requires:
            - newsletter-approval
          filters:
            tags:
              only: /.*/
      ## end goreleaser
